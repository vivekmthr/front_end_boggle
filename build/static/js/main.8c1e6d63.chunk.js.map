{"version":3,"sources":["components/Landing.jsx","components/playerlist.jsx","components/lobby.jsx","App.jsx","index.jsx"],"names":["withRouter","props","useState","name","setName","code","setCode","showJ","setShowJ","showC","setShowC","createGame","a","axios","get","new_code","console","log","history","push","data","onClick","e","preventDefault","classname","Button","Form","Group","controlId","Label","Control","onChange","target","value","to","className","Text","useStyles","makeStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","SpacingGrid","React","classes","gridshow","scores","length","Grid","item","xs","Paper","container","justify","direction","alignItems","players","map","player","index","key","createMuiTheme","typography","h3","fontSize","breakpoints","up","down","textAlign","useTimer","initialTime","time","start","reset","pause","isRunning","room","setRoom","currentSocket","setCurrentSocket","setPlayers","score_array","setscore_array","count","setCount","setShow","setshowscores","host","setHost","grid","setGrid","setGShow","showgrid","setshowgrid","endgame","setEndgame","words","setWords","endtime","setendtime","final_time","isBlocking","useEffect","queryString","parse","window","location","search","socket","io","emit","on","players_list","undefined","order_scores","onpopstate","off","submit_data","no_of_players","i","total_score1","sort","b","pwords","score","word","Container","fixed","ThemeProvider","Typography","variant","OverlayTrigger","trigger","triger","placement","overlay","Popover","id","Title","as","Content","src","alt","total_score","display_scores","Row","Col","htmlFor","srOnly","custom","sm","display_grid","placeholder","rows","cols","show_text","when","message","App","exact","path","render","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c1e6d63.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./landing.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\n//import Modal from 'react-bootstrap/Modal'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//this component will set up the landing page\r\n\r\nconst Landing = (props) => {\r\n  //variables in landing\r\n  const [name, setName] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [showJ, setShowJ] = useState(false);\r\n  const [showC, setShowC] = useState(false);\r\n  const [time, setTime] = useState(60);\r\n\r\n const SERVER_PORT = \"https://backend-boggle.herokuapp.com\";\r\n//const SERVER_PORT = `http://localhost:9000`\r\n\r\n  const createGame = async () => {\r\n    if (name !== \"\") {\r\n      const new_code = await axios.get(`${SERVER_PORT}/rooms/new`);\r\n      console.log(new_code);\r\n      if (new_code !== \"\") {\r\n        props.history.push(\r\n          `/lobby?name=${name}&room=${new_code.data}`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    createGame();\r\n    if (code === \"\") {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  //renders Join form\r\n  const RenderJoin = () => {\r\n    if (showJ === true) {\r\n      return (\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Game Code</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => {\r\n                setCode(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Link\r\n            onClick={(e) => (!name || !code ? e.preventDefault() : null)}\r\n            to={`/lobby?name=${name}&room=${code}`}\r\n          >\r\n            <button className={\"button mt-20\"}>Join Game</button>\r\n          </Link>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  //renders Create form\r\n  const RenderCreate = () => {\r\n    if (showC === true) {\r\n      console.log(showC);\r\n      return (\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\"></Form.Text>\r\n          </Form.Group>\r\n          <Button onClick={onClick}>Create Game</Button>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  //controls form rendering\r\n  const ShowJoin = () => {\r\n    setShowJ(!showJ);\r\n    console.log(showJ);\r\n  };\r\n\r\n  //controls form rendering\r\n  const ShowCreate = () => {\r\n    setShowC(!showC);\r\n    console.log(showC);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 classname=\"header\">Online Boggle</h1>\r\n      <Button classname=\"hello\" onClick={ShowCreate}>\r\n        Create game\r\n      </Button>\r\n      <Button onClick={ShowJoin}>Join Game</Button>\r\n      {RenderJoin()}\r\n      {RenderCreate()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Landing);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 100,\r\n        width: 400,\r\n    },\r\n    control: {\r\n        padding: theme.spacing(),\r\n    },\r\n}));\r\n\r\nexport default function SpacingGrid(props) {\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event) => {\r\n        setSpacing(Number(event.target.value));\r\n    };\r\nif(!props.gridshow && props.scores.length === 0){\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n                <Grid container justify=\"center\"\r\n                   >\r\n                       <h6>Players</h6>\r\n                    <Grid item container\r\n                        direction=\"row\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\">\r\n                        {props.players.map((player, index) => (\r\n                            <Grid key={index} item>\r\n                                <div>{player.name}</div>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <br/>\r\n        </Grid>\r\n    );\r\n}\r\nreturn null\r\n}\r\n\r\n\r\n// const leaderboard = () => {\r\n//     return (\r\n//       <ThemeProvider theme={theme}>\r\n//         <Typography variant=\"h3\">\r\n//           <strong>{scores.length > 0 ? <h3>Leaderboard!!!</h3> : \"\"}</strong>\r\n//         </Typography>\r\n//       </ThemeProvider>\r\n//     );\r\n//   };","import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useTimer } from \"use-timer\";\r\nimport SpacingGrid from \"./playerlist.jsx\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Prompt\r\n} from \"react-router-dom\";\r\nimport \"./lobby.css\";\r\n\r\n\r\n\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: \"1.2rem\",\r\n  \"@media (min-width:600px)\": {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    fontSize: \"2rem\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: 20,\r\n      width: 5,\r\n      padding: theme.spacing(4),\r\n      textAlign: \"center\",\r\n    },\r\n    height: 120,\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nlet scores = [];\r\n\r\nconst Lobby = (props) => {\r\n  //DECLARATIONS OF STATE NECESSARY THINGS\r\n\r\n  const { time, start, pause, reset, isRunning } = useTimer({\r\n    initialTime: 0,\r\n  });\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [currentSocket, setCurrentSocket] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [score_array, setscore_array] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [showscores, setshowscores] = useState(true);\r\n  const [host, setHost] = useState(\"\");\r\n  const [grid, setGrid] = useState([]);\r\n  const [gridshow, setGShow] = useState(false);\r\n  const [showgrid, setshowgrid] = useState(false);\r\n  const [endgame, setEndgame] = useState(false);\r\n  const [words, setWords] = useState(\"\");\r\n  const [endtime, setendtime]  = useState(120);\r\n  let final_time = 0;\r\n   const ENDPOINT = `https://backend-boggle.herokuapp.com/rooms`;\r\n  // const ENDPOINT = `http://localhost:9000/rooms`;\r\n  const classes = useStyles();\r\n  let [isBlocking, setIsBlocking] = useState(true);\r\n  \r\n\r\n\r\n  //Use Effect renders\r\n  useEffect(() => {\r\n    let { name, room } = queryString.parse(window.location.search);\r\n    console.log(queryString.parse(window.location.search));\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    const socket = io(`${ENDPOINT}/${room}`);\r\n    setCurrentSocket(socket);\r\n\r\n    socket.emit(\"add_player\", name);\r\n\r\n    socket.on(\"add_to_list\", (players_list) => {\r\n      console.log(players_list);\r\n      setPlayers(players_list);\r\n    });\r\n\r\n    socket.on(\"host\", (host) => {\r\n      console.log(\"getting called\");\r\n      console.log(host);\r\n      setHost(host);\r\n    });\r\n\r\n    socket.on(\"sending_time\", (time) => {\r\n      console.log('getting called')\r\n      console.log(time);\r\n      setendtime(time);\r\n      console.log(endtime);\r\n    });\r\n\r\n    socket.on(\"starting_game\", (data) => {\r\n      if (data.start) {\r\n        console.log('game is starting')\r\n        console.log(data.start)\r\n        setGrid(data.grid);\r\n        setGShow(data.start);\r\n        setshowgrid(false);\r\n        scores = []\r\n        setWords(\"\")\r\n        setscore_array([])\r\n        reset();\r\n        start();\r\n        setCount(0);\r\n      }\r\n    });\r\n\r\n    socket.on(\"sending scores\", (data) => {\r\n      //console.log('I am getting called')\r\n      console.log(data.players);\r\n      if (data.players !== undefined) {\r\n        console.log(\"data.players not undefined\")\r\n        scores = data.players;\r\n        console.log(scores)\r\n        setshowscores(true);\r\n      }\r\n      order_scores(scores);\r\n    });\r\n\r\n    window.onpopstate = e => {\r\n      setGShow(false)\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    }\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (time >= endtime && count === 0) {\r\n     console.log('happening')\r\n      setEndgame(true);\r\n      setGShow(false);\r\n      submit_data();\r\n      setCount(1);\r\n    }\r\n  }, [time]);\r\n\r\n  //STARTS THE GAME\r\n  const StartGame = (msg) => {\r\n    console.log(name);\r\n    console.log(\"I am getting called\");\r\n    currentSocket.emit(\"start game\", name);\r\n  };\r\n  //Submits data when game is over\r\n  const submit_data = () => {\r\n    currentSocket.emit(\"Words\", {\r\n      name: name,\r\n      words: words,\r\n      no_of_players: players.length,\r\n    });\r\n    currentSocket.emit(\"get_scores\", () => {\r\n      console.log(\"I am getting called\");\r\n    });\r\n  };\r\n\r\n  const order_scores = () => {\r\n    for (let i = 0; i < scores.length; i++) {\r\n      score_array.push(total_score1(scores[i].words));\r\n    }\r\n    score_array.sort(function (a, b) {\r\n      setShow(true)\r\n      return b - a;\r\n    });\r\n    setscore_array(score_array)\r\n    console.log(score_array);\r\n  };\r\n\r\n  const total_score1 = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        return score;\r\n      }\r\n    }\r\n  }\r\n\r\n  const total_score = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <h6> total score : {score}</h6>{\" \"}\r\n            {score === score_array[0] ? (\r\n              <div>\r\n                <img src=\"https://img.icons8.com/ios-filled/100/000000/medal2.png\" />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {score === score_array[1] && score !== score_array[0] ? (\r\n              <img\r\n                src=\"https://img.icons8.com/ios-filled/100/000000/medal-second-place.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {score === score_array[2] && score !== score_array[1] ? (\r\n              <img\r\n                src=\"https://img.icons8.com/ios-filled/100/000000/medal-third-place.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const leaderboard = () => {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"h3\">\r\n          {scores.length > 0 ? (\r\n            <strong>\r\n              <h3>Leaderboard</h3>{\" \"}\r\n            </strong>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Typography>\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n\r\n  //DISPLAYS SCORES\r\n  const display_scores = () => {\r\n    if (gridshow === false && scores.length > 0) {\r\n      console.log(score_array)\r\n      return (\r\n        <div>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <br/>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={4}\r\n              >\r\n                {scores.map((player) => (\r\n                  <li>\r\n                    <OverlayTrigger\r\n                    trigger=\"hover\"\r\n                    triger= \"focus\"\r\n                    \r\n                      \r\n                      placement=\"bottom\"\r\n                      overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                          <Popover.Title as=\"h3\">Word List</Popover.Title>\r\n                          <Popover.Content>\r\n                            <Grid\r\n                              container\r\n                              direction=\"column\"\r\n                              justify=\"center\"\r\n                              alignItems=\"center\"\r\n                              spacing={0}\r\n                            >\r\n                              {player.words.map((word) => (\r\n                                <Grid key={word.word} item>\r\n                                  <h6>\r\n                                    {word.word !== \"\"\r\n                                      ? `${word.word} - ${word.score}`\r\n                                      : \"\"}\r\n                                  </h6>\r\n                                </Grid>\r\n                              ))}\r\n                              (tap note to show and hide list)\r\n                            </Grid>\r\n                          </Popover.Content>\r\n                        </Popover>\r\n                      }\r\n                    >\r\n                      <a>\r\n                        <ThemeProvider theme={theme}>\r\n                          <Typography variant=\"h3\">{player.name}</Typography>\r\n                        </ThemeProvider>\r\n                        <h3>{total_score(player.words)}</h3>\r\n                      </a>\r\n                    </OverlayTrigger>\r\n                  </li>\r\n                ))}\r\n                 <Button variant='success' onClick={(e)=>{setshowgrid(!showgrid)}}>See board</Button>\r\n              </Grid>\r\n            </Grid>\r\n           <br/>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //RENDER FUNCTIONS\r\n  const display_grid = () => {\r\n    //console.log(grid[0])\r\n    if (gridshow === true || showgrid === true) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[0, 1, 2, 3].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[4, 5, 6, 7].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[8, 9, 10, 11].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[12, 13, 14, 15].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const render_timer = () => {\r\n    if (gridshow) {\r\n      return (\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h3\">\r\n            Find Words!! Seconds Left: {endtime - time}\r\n          </Typography>\r\n        </ThemeProvider>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const text_area = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <div className=\"text-container\">\r\n            <textarea\r\n              className=\"my_text_area\"\r\n              onChange={(e) => {\r\n                setWords(e.target.value);\r\n              }}\r\n              placeholder=\"enter your words here\"\r\n              rows=\"100\"\r\n              cols=\"20\"\r\n            ></textarea>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  const show_text = () => {\r\n    if (gridshow === true) {\r\n      return (\r\n        <div>\r\n          <div id=\"paper\">\r\n            <div id=\"pattern\">\r\n              <div id=\"content\">\r\n                {text_area()}\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                (Words will automatically submit)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const render_code = () => {\r\n    if (!gridshow && scores.length === 0) {\r\n      return (\r\n        <div>\r\n          <ThemeProvider theme={theme}>\r\n            <Typography variant=\"h3\">\r\n              <strong>\r\n                {\" \"}\r\n                {`${host}'s room`} Code: {room}\r\n              </strong>\r\n            </Typography>\r\n          </ThemeProvider>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n       host-{host} code-{room} (Seeing an old page? Refresh) {leaderboard()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Container fixed>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={4}>\r\n          <Grid item>{render_code()}</Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid>\r\n        {display_scores()}\r\n        <br />\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <SpacingGrid\r\n                players={players}\r\n                gridshow={gridshow}\r\n                scores={scores}\r\n              ></SpacingGrid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              {gridshow === false ? (\r\n                <div>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      StartGame(e);\r\n                    }}\r\n                  >\r\n                    {endgame === true ? \"play again\" : \"start game\"}\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              {gridshow === false ? (\r\n                <div>\r\n                  <Form>\r\n                    <Form.Row className=\"align-items-center\">\r\n                      <Col xs=\"auto\" className=\"my-1\">\r\n                        <Form.Label\r\n                          className=\"mr-sm-2\"\r\n                          htmlFor=\"inlineFormCustomSelect\"\r\n                          srOnly\r\n                        >\r\n                          Preference\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                       onChange= {(e) => {\r\n                      final_time = e.target.value\r\n                        console.log(final_time)\r\n    currentSocket.emit('setting_time', (final_time))\r\n                      }}\r\n                          as=\"select\"\r\n                          className=\"mr-sm-2\"\r\n                          id=\"inlineFormCustomSelect\"\r\n                          custom\r\n                        >\r\n                          <option value=\"120\">Set Time...(seconds)</option>\r\n                          <option value=\"60\">60</option>\r\n                          <option value=\"120\">120</option>\r\n                          <option value=\"180\">180</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{render_timer()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{display_grid()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={4} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{show_text()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Prompt\r\n        when={isBlocking}\r\n        message={location =>\r\n          `Are you sure you want to leave this page`\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lobby);\r\n\r\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\r\n\r\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\r\n\r\n//   <Grid\r\n//   container\r\n//   direction=\"column\"\r\n//   justify=\"flex-start\"\r\n//   alignItems=\"center\"\r\n//   spacing={2}\r\n// >\r\n//   {player.words.map((word) => (\r\n//     <Grid key={word.word} item>\r\n//       <h6>\r\n//         {word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"}\r\n//       </h6>\r\n//     </Grid>\r\n//   ))}\r\n//   <h6>{total_score(player.words)}</h6>\r\n// </Grid>\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Landing from \"./components/Landing\"\r\nimport Lobby from \"./components/lobby\"\r\n//import Create from \"./components/Create\";\r\n//import Game from \"./components/Game\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/' render={props => <Landing {...props} />} />\r\n          <Route path= '/lobby' render={props => <Lobby {...props} />} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// <Route path='/rooms/:id' render={props => <Game {...props} />} />","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( \n    <React.StrictMode >\n    <App / >\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}