{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vivek\\\\Coding_Projects\\\\new_boggle\\\\boggle\\\\client\\\\src\\\\components\\\\lobby.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Figure from \"react-bootstrap/Figure\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTimer } from \"use-timer\";\nimport SpacingGrid from \"./playerlist.jsx\";\nimport { withRouter } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport \"./lobby.css\";\nconst theme = createMuiTheme();\ntheme.typography.h3 = {\n  fontSize: \"1.2rem\",\n  \"@media (min-width:600px)\": {\n    fontSize: \"1.5rem\"\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"2rem\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(5),\n    [theme.breakpoints.down(\"xs\")]: {\n      height: 20,\n      width: 5,\n      padding: theme.spacing(4),\n      textAlign: \"center\"\n    },\n    height: 120,\n    width: 100,\n    textAlign: \"center\"\n  },\n  control: {\n    padding: theme.spacing(4)\n  }\n}));\nlet scores = [];\n\nconst Lobby = props => {\n  let {\n    Time\n  } = queryString.parse(window.location.search); //DECLARATIONS OF STATE NECESSARY THINGS\n\n  const {\n    time,\n    start,\n    pause,\n    reset,\n    isRunning\n  } = useTimer({\n    initialTime: 10,\n    timerType: \"DECREMENTAL\"\n  });\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [currentSocket, setCurrentSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(true);\n  const [host, setHost] = useState(\"\");\n  const [grid, setGrid] = useState([]);\n  const [gridshow, setGShow] = useState(false);\n  const [endgame, setEndgame] = useState(false);\n  const [words, setWords] = useState(\"\");\n  const ENDPOINT = `http://localhost:9000/rooms`;\n  const classes = useStyles();\n  let score_array = [];\n  const ordered_scores = []; /////\n  //Use Effect renders\n\n  useEffect(() => {\n    let {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    console.log(queryString.parse(window.location.search));\n    setName(name);\n    setRoom(room);\n    const socket = io(`${ENDPOINT}/${room}`);\n    setCurrentSocket(socket);\n    socket.emit(\"add_player\", name);\n    socket.on(\"add_to_list\", players_list => {\n      console.log(players_list);\n      setPlayers(players_list);\n    });\n    socket.on(\"host\", host => {\n      console.log(\"getting called\");\n      console.log(host);\n      setHost(host);\n    });\n    socket.on(\"starting_game\", data => {\n      console.log(data.grid[0]);\n      setGrid(data.grid);\n      setGShow(data.start);\n      console.log(gridshow);\n\n      if (data.start) {\n        reset();\n        start();\n        setCount(0);\n      }\n    });\n    socket.on(\"sending scores\", data => {\n      //console.log('I am getting called')\n      console.log(data.players);\n\n      if (data.players !== undefined) {\n        scores = data.players;\n      }\n\n      order_scores(scores);\n    });\n    return () => {\n      socket.emit(\"disconnect\", name);\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    //console.log('i am getting called')\n    if (time === 0 && count === 0) {\n      setEndgame(true);\n      setGShow(false);\n      submit_data();\n      setCount(1);\n    }\n  }, [time]); //STARTS THE GAME\n\n  const StartGame = msg => {\n    console.log(name);\n    console.log(\"I am getting called\");\n    currentSocket.emit(\"start game\", name);\n  }; //Submits data when game is over\n\n\n  const submit_data = () => {\n    currentSocket.emit(\"Words\", {\n      name: name,\n      words: words,\n      no_of_players: players.length\n    });\n    currentSocket.emit(\"get_scores\", () => {\n      console.log(\"I am getting called\");\n    });\n  };\n\n  const order_scores = () => {\n    for (let i = 0; i < scores.length; i++) {\n      total_score(scores[i].words);\n    }\n\n    score_array.sort(function (a, b) {\n      return b - a;\n    });\n    console.log(score_array);\n  };\n\n  const get_pictures = score => {\n    if (score === score_array[0]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 14\n        }\n      }, \"hiiiii\");\n    }\n  };\n\n  const total_score = pwords => {\n    if (pwords !== undefined) {\n      if (pwords.length !== 0) {\n        var score = 0;\n        pwords.map(word => {\n          score += word.score;\n        });\n        score_array.push(score);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }\n        }, \" total score : \", score), \" \", score === score_array[0] ? /*#__PURE__*/React.createElement(Figure, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Figure.Image, {\n          width: 110,\n          height: 130,\n          alt: \"171x180\",\n          src: \"https://lh3.googleusercontent.com/proxy/BX40GgbfS-yDs6CoG8dR5-72f_TLxbZOFfFV5DhJKjPhRninl5I92o4E9qAMjCCDuV4N8TMFzOaNzgtGIzbX4tlHhP2AUqlv7axJbAOYEeJGLuzIyao7gbKDkoQt9y84VBaLQ7pfZYP0mf3sUXmIbwS9X8sbfPOYus6gbbASJLYIPkcGx2Po_g\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(Figure.Caption, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }\n        }, \"Nulla vitae elit libero, a pharetra augue mollis interdum.\")) : \"\");\n      }\n    }\n  }; //DISPLAYS SCORES\n\n\n  const display_scores = () => {\n    if (gridshow === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, scores.map(player => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"focus\",\n        trigger: \"hover\",\n        placement: \"bottom\",\n        overlay: /*#__PURE__*/React.createElement(Popover, {\n          id: \"popover-basic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Popover.Title, {\n          as: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }\n        }, \"Word List\"), /*#__PURE__*/React.createElement(Popover.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 31\n          }\n        }, player.words.map(word => /*#__PURE__*/React.createElement(Grid, {\n          key: word.word,\n          item: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 37\n          }\n        }, word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"))), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }\n        }, total_score(player.words)), get_pictures(), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }\n        }), \"(tap note to show and hide list)\"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, player.name)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }\n      }, total_score(player.words)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 27\n        }\n      }, \"(tap to show word list)\"))))))))));\n    }\n  }; //RENDER FUNCTIONS\n\n\n  const display_grid = () => {\n    //console.log(grid[0])\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }\n      }, [0, 1, 2, 3].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }, [4, 5, 6, 7].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }\n      }, [8, 9, 10, 11].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, [12, 13, 14, 15].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, grid[value])))))))));\n    }\n  };\n\n  const render_timer = () => {\n    if (gridshow) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }, \"..Find Words!!\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }\n      }, \"Seconds Left: \", time));\n    } else {\n      return;\n    }\n  };\n\n  const text_area = () => {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"my_text_area\",\n      onChange: e => {\n        setWords(e.target.value);\n      },\n      placeholder: \"enter your words here\",\n      rows: \"20\",\n      cols: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  const show_text = () => {\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"paper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"pattern\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }\n      }, text_area(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 17\n        }\n      }), \"(Words will automatically submit)\"))));\n    }\n  };\n\n  const render_code = () => {\n    if (!gridshow) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }\n      }, \"Code: \", room), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }\n      }, `${host}'s room`));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, render_code()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SpacingGrid, {\n    players: players,\n    gridshow: gridshow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, gridshow === false ? /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      StartGame(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 17\n    }\n  }, endgame === true ? \"play again\" : \"start game\") : \"\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }\n  }, render_timer()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }\n  }, display_grid()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 13\n    }\n  }, show_text())))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }\n  }, display_scores()));\n};\n\nexport default withRouter(Lobby);\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\n\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\n//   <Grid\n//   container\n//   direction=\"column\"\n//   justify=\"flex-start\"\n//   alignItems=\"center\"\n//   spacing={2}\n// >\n//   {player.words.map((word) => (\n//     <Grid key={word.word} item>\n//       <h6>\n//         {word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"}\n//       </h6>\n//     </Grid>\n//   ))}\n//   <h6>{total_score(player.words)}</h6>\n// </Grid>","map":{"version":3,"sources":["C:/Users/vivek/Coding_Projects/new_boggle/boggle/client/src/components/lobby.jsx"],"names":["React","useState","useEffect","queryString","io","Button","Form","Figure","makeStyles","Grid","Container","Paper","useTimer","SpacingGrid","withRouter","createMuiTheme","ThemeProvider","Typography","Popover","OverlayTrigger","theme","typography","h3","fontSize","breakpoints","up","useStyles","root","flexGrow","paper","padding","spacing","down","height","width","textAlign","control","scores","Lobby","props","Time","parse","window","location","search","time","start","pause","reset","isRunning","initialTime","timerType","name","setName","room","setRoom","currentSocket","setCurrentSocket","players","setPlayers","count","setCount","show","setShow","host","setHost","grid","setGrid","gridshow","setGShow","endgame","setEndgame","words","setWords","ENDPOINT","classes","score_array","ordered_scores","console","log","socket","emit","on","players_list","data","undefined","order_scores","off","submit_data","StartGame","msg","no_of_players","length","i","total_score","sort","a","b","get_pictures","score","pwords","map","word","push","display_scores","player","display_grid","value","render_timer","text_area","e","target","show_text","render_code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useTimer } from \"use-timer\";\r\nimport SpacingGrid from \"./playerlist.jsx\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport \"./lobby.css\";\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: \"1.2rem\",\r\n  \"@media (min-width:600px)\": {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    fontSize: \"2rem\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: 20,\r\n      width: 5,\r\n      padding: theme.spacing(4),\r\n      textAlign: \"center\",\r\n    },\r\n    height: 120,\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nlet scores = [];\r\n\r\nconst Lobby = (props) => {\r\n  let { Time } = queryString.parse(window.location.search);\r\n  //DECLARATIONS OF STATE NECESSARY THINGS\r\n  const { time, start, pause, reset, isRunning } = useTimer({\r\n    initialTime: 10,\r\n    timerType: \"DECREMENTAL\",\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [currentSocket, setCurrentSocket] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [show, setShow] = useState(true);\r\n  const [host, setHost] = useState(\"\");\r\n  const [grid, setGrid] = useState([]);\r\n  const [gridshow, setGShow] = useState(false);\r\n  const [endgame, setEndgame] = useState(false);\r\n  const [words, setWords] = useState(\"\");\r\n  const ENDPOINT = `http://localhost:9000/rooms`;\r\n  const classes = useStyles();\r\n  let score_array = [];\r\n  const ordered_scores = [];\r\n  /////\r\n\r\n  //Use Effect renders\r\n  useEffect(() => {\r\n    let { name, room } = queryString.parse(window.location.search);\r\n    console.log(queryString.parse(window.location.search));\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    const socket = io(`${ENDPOINT}/${room}`);\r\n    setCurrentSocket(socket);\r\n\r\n    socket.emit(\"add_player\", name);\r\n\r\n    socket.on(\"add_to_list\", (players_list) => {\r\n      console.log(players_list);\r\n      setPlayers(players_list);\r\n    });\r\n\r\n    socket.on(\"host\", (host) => {\r\n      console.log(\"getting called\");\r\n      console.log(host);\r\n      setHost(host);\r\n    });\r\n\r\n    socket.on(\"starting_game\", (data) => {\r\n      console.log(data.grid[0]);\r\n      setGrid(data.grid);\r\n      setGShow(data.start);\r\n      console.log(gridshow);\r\n      if (data.start) {\r\n        reset();\r\n        start();\r\n        setCount(0);\r\n      }\r\n    });\r\n\r\n    socket.on(\"sending scores\", (data) => {\r\n      //console.log('I am getting called')\r\n      console.log(data.players);\r\n      if (data.players !== undefined) {\r\n        scores = data.players;\r\n      }\r\n      order_scores(scores);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //console.log('i am getting called')\r\n    if (time === 0 && count === 0) {\r\n      setEndgame(true);\r\n      setGShow(false);\r\n      submit_data();\r\n      setCount(1);\r\n    }\r\n  }, [time]);\r\n\r\n  //STARTS THE GAME\r\n  const StartGame = (msg) => {\r\n    console.log(name);\r\n    console.log(\"I am getting called\");\r\n    currentSocket.emit(\"start game\", name);\r\n  };\r\n  //Submits data when game is over\r\n  const submit_data = () => {\r\n    currentSocket.emit(\"Words\", {\r\n      name: name,\r\n      words: words,\r\n      no_of_players: players.length,\r\n    });\r\n    currentSocket.emit(\"get_scores\", () => {\r\n      console.log(\"I am getting called\");\r\n    });\r\n  };\r\n\r\n  const order_scores = () => {\r\n    for (let i = 0; i < scores.length; i++) {\r\n      total_score(scores[i].words);\r\n    }\r\n    score_array.sort((function(a, b){return b-a}));\r\n    console.log(score_array);\r\n  };\r\n\r\n  const get_pictures = (score)=>{\r\n    if(score === score_array[0]){\r\n      return <div>\r\n        hiiiii</div>\r\n    }\r\n  }\r\n\r\n  const total_score = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        score_array.push(score);\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <h6> total score : {score}</h6>{\" \"}\r\n            {score === score_array[0] ? <Figure>\r\n      <Figure.Image\r\n        width={110}\r\n        height={130}\r\n        alt=\"171x180\"\r\n        src=\"https://lh3.googleusercontent.com/proxy/BX40GgbfS-yDs6CoG8dR5-72f_TLxbZOFfFV5DhJKjPhRninl5I92o4E9qAMjCCDuV4N8TMFzOaNzgtGIzbX4tlHhP2AUqlv7axJbAOYEeJGLuzIyao7gbKDkoQt9y84VBaLQ7pfZYP0mf3sUXmIbwS9X8sbfPOYus6gbbASJLYIPkcGx2Po_g\"\r\n      />\r\n      <Figure.Caption>\r\n        Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n      </Figure.Caption>\r\n    </Figure> : \"\"}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //DISPLAYS SCORES\r\n  const display_scores = () => {\r\n    if (gridshow === false) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={4}\r\n              >\r\n                {\" \"}\r\n                <ul>\r\n                  {scores.map((player) => (\r\n                    <li>\r\n                      <OverlayTrigger\r\n                        trigger=\"focus\"\r\n                        trigger=\"hover\"\r\n                        placement=\"bottom\"\r\n                        overlay={\r\n                          <Popover id=\"popover-basic\">\r\n                            <Popover.Title as=\"h3\">Word List</Popover.Title>\r\n                            <Popover.Content>\r\n                              <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                              >\r\n                                {player.words.map((word) => (\r\n                                  <Grid key={word.word} item>\r\n                                    <h6>\r\n                                      {word.word !== \"\"\r\n                                        ? `${word.word} - ${word.score}`\r\n                                        : \"\"}\r\n                                    </h6>\r\n                                  </Grid>\r\n                                ))}\r\n                                <h6>{total_score(player.words)}</h6>\r\n                                {get_pictures()}\r\n                                <br />\r\n                                (tap note to show and hide list)\r\n                              </Grid>\r\n                            </Popover.Content>\r\n                          </Popover>\r\n                        }\r\n                      >\r\n                        <a>\r\n                          <ThemeProvider theme={theme}>\r\n                            <Typography variant=\"h3\">{player.name}</Typography>\r\n                          </ThemeProvider>\r\n                          <h3>{total_score(player.words)}</h3>\r\n                          <p>(tap to show word list)</p>\r\n                        </a>\r\n                      </OverlayTrigger>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //RENDER FUNCTIONS\r\n  const display_grid = () => {\r\n    //console.log(grid[0])\r\n    if (gridshow === true) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[0, 1, 2, 3].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[4, 5, 6, 7].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[8, 9, 10, 11].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[12, 13, 14, 15].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const render_timer = () => {\r\n    if (gridshow) {\r\n      return (\r\n        <div>\r\n          <h3>..Find Words!!</h3>\r\n          <h4>Seconds Left: {time}</h4>\r\n        </div>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const text_area = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <div className=\"text-container\">\r\n            <textarea\r\n              className=\"my_text_area\"\r\n              onChange={(e) => {\r\n                setWords(e.target.value);\r\n              }}\r\n              placeholder=\"enter your words here\"\r\n              rows=\"20\"\r\n              cols=\"20\"\r\n            ></textarea>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  const show_text = () => {\r\n    if (gridshow === true) {\r\n      return (\r\n        <div>\r\n          <div id=\"paper\">\r\n            <div id=\"pattern\">\r\n              <div id=\"content\">\r\n                {text_area()}\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                (Words will automatically submit)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const render_code = () => {\r\n    if (!gridshow) {\r\n      return (\r\n        <div>\r\n          <h1>Code: {room}</h1>\r\n          <h3>{`${host}'s room`}</h3>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <div></div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={4}>\r\n            <Grid item>{render_code()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <SpacingGrid players={players} gridshow={gridshow}></SpacingGrid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              {gridshow === false ? (\r\n                <Button\r\n                  onClick={(e) => {\r\n                    StartGame(e);\r\n                  }}\r\n                >\r\n                  {endgame === true ? \"play again\" : \"start game\"}\r\n                </Button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{render_timer()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{display_grid()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={4} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{show_text()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div>{display_scores()}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lobby);\r\n\r\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\r\n\r\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\r\n\r\n//   <Grid\r\n//   container\r\n//   direction=\"column\"\r\n//   justify=\"flex-start\"\r\n//   alignItems=\"center\"\r\n//   spacing={2}\r\n// >\r\n//   {player.words.map((word) => (\r\n//     <Grid key={word.word} item>\r\n//       <h6>\r\n//         {word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"}\r\n//       </h6>\r\n//     </Grid>\r\n//   ))}\r\n//   <h6>{total_score(player.words)}</h6>\r\n// </Grid>\r\n"]},"metadata":{},"sourceType":"module"}