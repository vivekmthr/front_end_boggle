{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vivek\\\\Coding_Projects\\\\new_boggle\\\\boggle\\\\client\\\\src\\\\components\\\\lobby.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTimer } from \"use-timer\";\nimport SpacingGrid from \"./playerlist.jsx\";\nimport { withRouter } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./lobby.css\";\nconst theme = createMuiTheme();\ntheme.typography.h3 = {\n  fontSize: \"1.2rem\",\n  \"@media (min-width:600px)\": {\n    fontSize: \"1.5rem\"\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"2rem\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(5),\n    [theme.breakpoints.down(\"xs\")]: {\n      height: 20,\n      width: 5,\n      padding: theme.spacing(4),\n      textAlign: \"center\"\n    },\n    height: 120,\n    width: 100,\n    textAlign: \"center\"\n  },\n  control: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Lobby = props => {\n  let scores = [];\n  let {\n    Time\n  } = queryString.parse(window.location.search); //DECLARATIONS OF STATE NECESSARY THINGS\n\n  const {\n    time,\n    start,\n    pause,\n    reset,\n    isRunning\n  } = useTimer({\n    initialTime: 15,\n    timerType: \"DECREMENTAL\"\n  });\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [currentSocket, setCurrentSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(true);\n  const [host, setHost] = useState(\"\");\n  const [grid, setGrid] = useState([]);\n  const [gridshow, setGShow] = useState(false);\n  const [endgame, setEndgame] = useState(false);\n  const [words, setWords] = useState(\"\");\n  const ENDPOINT = `http://localhost:9000/rooms`;\n  const classes = useStyles(); /////\n  //Use Effect renders\n\n  useEffect(() => {\n    let {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    console.log(queryString.parse(window.location.search));\n    setName(name);\n    setRoom(room);\n    const socket = io(`${ENDPOINT}/${room}`);\n    setCurrentSocket(socket);\n    socket.emit(\"add_player\", name);\n    socket.on(\"add_to_list\", players_list => {\n      console.log(players_list);\n      setPlayers(players_list);\n    });\n    socket.on(\"host\", host => {\n      console.log(\"getting called\");\n      console.log(host);\n      setHost(host);\n    });\n    socket.on(\"starting_game\", data => {\n      console.log(data.grid[0]);\n      setGrid(data.grid);\n      setGShow(data.start);\n      console.log(gridshow);\n\n      if (data.start) {\n        reset();\n        start();\n        setCount(0);\n      }\n    });\n    socket.on(\"sending scores\", data => {\n      //console.log('I am getting called')\n      console.log(data.players);\n\n      if (data.players !== undefined) {\n        scores = data.players;\n        display_scores();\n      }\n    });\n    return () => {\n      socket.emit(\"disconnect\", name);\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    //console.log('i am getting called')\n    if (time === 0 && count === 0) {\n      setEndgame(true);\n      setGShow(false);\n      submit_data();\n      setCount(1);\n    }\n  }, [time]); //STARTS THE GAME\n\n  const StartGame = msg => {\n    console.log(name);\n    console.log(\"I am getting called\");\n    currentSocket.emit(\"start game\", name);\n  }; //Submits data when game is over\n\n\n  const submit_data = () => {\n    currentSocket.emit(\"Words\", {\n      name: name,\n      words: words,\n      no_of_players: players.length\n    });\n    currentSocket.emit(\"get_scores\", () => {\n      console.log(\"I am getting called\");\n    });\n  };\n\n  const total_score = pwords => {\n    if (pwords !== undefined) {\n      if (pwords.length !== 0) {\n        var score = 0;\n        pwords.map(word => {\n          score += word.score;\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }\n        }, \" total score : \", score), \" \");\n      }\n    }\n  }; //DISPLAYS SCORES\n\n\n  const display_scores = () => {\n    if (gridshow === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-around\",\n        alignItems: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, scores.map(player => /*#__PURE__*/React.createElement(Grid, {\n        key: player.name,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, player.name), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, player.words.map(word => /*#__PURE__*/React.createElement(Grid, {\n        key: word.word,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 27\n        }\n      }, word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"))), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }, total_score(player.words)))))))));\n    }\n  }; //RENDER FUNCTIONS\n\n\n  const display_grid = () => {\n    //console.log(grid[0])\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, [0, 1, 2, 3].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, [4, 5, 6, 7].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, [8, 9, 10, 11].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, [12, 13, 14, 15].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, grid[value])))))))));\n    }\n  };\n\n  const render_timer = () => {\n    if (gridshow) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, \"..Find Words!!\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, \"Seconds Left: \", time));\n    } else {\n      return;\n    }\n  }; //TEXT AREA\n\n\n  const text_area = () => {\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      }, \"Enter your Words Here\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"my_text_area\",\n        onChange: e => {\n          setWords(e.target.value);\n        },\n        rows: \"4\",\n        cols: \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, \"Words Will Automatically Submit\")));\n    }\n  };\n\n  const show_scores = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pattern\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, text_area())));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, \"Code: \", room)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SpacingGrid, {\n    players: players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      StartGame(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 15\n    }\n  }, endgame === true ? \"play again\" : \"start game\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, render_timer()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, display_grid()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }\n  }, display_scores()), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }, show_scores()));\n};\n\nexport default withRouter(Lobby);\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\n\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/","map":{"version":3,"sources":["C:/Users/vivek/Coding_Projects/new_boggle/boggle/client/src/components/lobby.jsx"],"names":["React","useState","useEffect","queryString","io","Button","Form","makeStyles","Grid","Container","Paper","useTimer","SpacingGrid","withRouter","createMuiTheme","ThemeProvider","Typography","theme","typography","h3","fontSize","breakpoints","up","useStyles","root","flexGrow","paper","padding","spacing","down","height","width","textAlign","control","Lobby","props","scores","Time","parse","window","location","search","time","start","pause","reset","isRunning","initialTime","timerType","name","setName","room","setRoom","currentSocket","setCurrentSocket","players","setPlayers","count","setCount","show","setShow","host","setHost","grid","setGrid","gridshow","setGShow","endgame","setEndgame","words","setWords","ENDPOINT","classes","console","log","socket","emit","on","players_list","data","undefined","display_scores","off","submit_data","StartGame","msg","no_of_players","length","total_score","pwords","score","map","word","player","display_grid","value","render_timer","text_area","e","target","show_scores"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,aAAP;AAEA,MAAMC,KAAK,GAAGH,cAAc,EAA5B;AAEAG,KAAK,CAACC,UAAN,CAAiBC,EAAjB,GAAsB;AACpBC,EAAAA,QAAQ,EAAE,QADU;AAEpB,8BAA4B;AAC1BA,IAAAA,QAAQ,EAAE;AADgB,GAFR;AAKpB,GAACH,KAAK,CAACI,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,IAAAA,QAAQ,EAAE;AADkB;AALV,CAAtB;AAUA,MAAMG,SAAS,GAAGhB,UAAU,CAAEU,KAAD,KAAY;AACvCO,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CADJ;AAEL,KAACX,KAAK,CAACI,WAAN,CAAkBQ,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,MAAM,EAAE,EADsB;AAE9BC,MAAAA,KAAK,EAAE,CAFuB;AAG9BJ,MAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CAHqB;AAI9BI,MAAAA,SAAS,EAAE;AAJmB,KAF3B;AAQLF,IAAAA,MAAM,EAAE,GARH;AASLC,IAAAA,KAAK,EAAE,GATF;AAULC,IAAAA,SAAS,EAAE;AAVN,GAJgC;AAgBvCC,EAAAA,OAAO,EAAE;AACPN,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AADF;AAhB8B,CAAZ,CAAD,CAA5B;;AAqBA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,MAAM,GAAG,EAAb;AACA,MAAI;AAAEC,IAAAA;AAAF,MAAWlC,WAAW,CAACmC,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf,CAFuB,CAGvB;;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAA2CnC,QAAQ,CAAC;AACxDoC,IAAAA,WAAW,EAAE,EAD2C;AAExDC,IAAAA,SAAS,EAAE;AAF6C,GAAD,CAAzD;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjD,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkD,IAAD,EAAOC,OAAP,IAAkBnD,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoD,aAAD,EAAgBC,gBAAhB,IAAoCrD,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACsD,OAAD,EAAUC,UAAV,IAAwBvD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwD,KAAD,EAAQC,QAAR,IAAoBzD,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC0D,IAAD,EAAOC,OAAP,IAAkB3D,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAC4D,IAAD,EAAOC,OAAP,IAAkB7D,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8D,IAAD,EAAOC,OAAP,IAAkB/D,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgE,QAAD,EAAWC,QAAX,IAAuBjE,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACkE,OAAD,EAAUC,UAAV,IAAwBnE,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoE,KAAD,EAAQC,QAAR,IAAoBrE,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMsE,QAAQ,GAAI,6BAAlB;AACA,QAAMC,OAAO,GAAGjD,SAAS,EAAzB,CApBuB,CAqBvB;AAEA;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AAAE+C,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBhD,WAAW,CAACmC,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAArB;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAYvE,WAAW,CAACmC,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAZ;AACAS,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,UAAMwB,MAAM,GAAGvE,EAAE,CAAE,GAAEmE,QAAS,IAAGpB,IAAK,EAArB,CAAjB;AACAG,IAAAA,gBAAgB,CAACqB,MAAD,CAAhB;AAEAA,IAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ,EAA0B3B,IAA1B;AAEA0B,IAAAA,MAAM,CAACE,EAAP,CAAU,aAAV,EAA0BC,YAAD,IAAkB;AACzCL,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACAtB,MAAAA,UAAU,CAACsB,YAAD,CAAV;AACD,KAHD;AAKAH,IAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAmBhB,IAAD,IAAU;AAC1BY,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJD;AAMAc,IAAAA,MAAM,CAACE,EAAP,CAAU,eAAV,EAA4BE,IAAD,IAAU;AACnCN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAAChB,IAAL,CAAU,CAAV,CAAZ;AACAC,MAAAA,OAAO,CAACe,IAAI,CAAChB,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACa,IAAI,CAACpC,KAAN,CAAR;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;;AACA,UAAIc,IAAI,CAACpC,KAAT,EAAgB;AACdE,QAAAA,KAAK;AACLF,QAAAA,KAAK;AACLe,QAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;AACF,KAVD;AAYAiB,IAAAA,MAAM,CAACE,EAAP,CAAU,gBAAV,EAA6BE,IAAD,IAAU;AACpC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACxB,OAAjB;;AACA,UAAIwB,IAAI,CAACxB,OAAL,KAAiByB,SAArB,EAAgC;AAC9B5C,QAAAA,MAAM,GAAG2C,IAAI,CAACxB,OAAd;AACA0B,QAAAA,cAAc;AACf;AACF,KAPD;AASA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ,EAA0B3B,IAA1B;AACA0B,MAAAA,MAAM,CAACO,GAAP;AACD,KAHD;AAID,GA/CQ,EA+CN,EA/CM,CAAT;AAiDAhF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIwC,IAAI,KAAK,CAAT,IAAce,KAAK,KAAK,CAA5B,EAA+B;AAC7BW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAiB,MAAAA,WAAW;AACXzB,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;AACF,GARQ,EAQN,CAAChB,IAAD,CARM,CAAT,CAzEuB,CAmFvB;;AACA,QAAM0C,SAAS,GAAIC,GAAD,IAAS;AACzBZ,IAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACArB,IAAAA,aAAa,CAACuB,IAAd,CAAmB,YAAnB,EAAiC3B,IAAjC;AACD,GAJD,CApFuB,CAyFvB;;;AACA,QAAMkC,WAAW,GAAG,MAAM;AACxB9B,IAAAA,aAAa,CAACuB,IAAd,CAAmB,OAAnB,EAA4B;AAC1B3B,MAAAA,IAAI,EAAEA,IADoB;AAE1BoB,MAAAA,KAAK,EAAEA,KAFmB;AAG1BiB,MAAAA,aAAa,EAAE/B,OAAO,CAACgC;AAHG,KAA5B;AAKAlC,IAAAA,aAAa,CAACuB,IAAd,CAAmB,YAAnB,EAAiC,MAAM;AACrCH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAFD;AAGD,GATD;;AAWA,QAAMc,WAAW,GAAIC,MAAD,IAAY;AAC9B,QAAIA,MAAM,KAAKT,SAAf,EAA0B;AACxB,UAAIS,MAAM,CAACF,MAAP,KAAkB,CAAtB,EAAyB;AACvB,YAAIG,KAAK,GAAG,CAAZ;AACAD,QAAAA,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACnBF,UAAAA,KAAK,IAAIE,IAAI,CAACF,KAAd;AACD,SAFD;AAGA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAoBA,KAApB,CAFF,EAEkC,GAFlC,CADF;AAMD;AACF;AACF,GAfD,CArGuB,CAsHvB;;;AACA,QAAMT,cAAc,GAAG,MAAM;AAC3B,QAAIhB,QAAQ,KAAK,KAAjB,EAAwB;AACtB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEO,OAAO,CAAChD,IAAnC;AAAyC,QAAA,OAAO,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,EAAC,cAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGY,MAAM,CAACuD,GAAP,CAAYE,MAAD,iBACV,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,MAAM,CAAC5C,IAAlB;AAAwB,QAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK4C,MAAM,CAAC5C,IAAZ,CADF,eAEE,oBAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAC,YAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG4C,MAAM,CAACxB,KAAP,CAAasB,GAAb,CAAkBC,IAAD,iBAChB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACA,IAAhB;AAAsB,QAAA,IAAI,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACA,IAAL,KAAc,EAAd,GACI,GAAEA,IAAI,CAACA,IAAK,MAAKA,IAAI,CAACF,KAAM,EADhC,GAEG,EAHN,CADF,CADD,CAPH,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,WAAW,CAACK,MAAM,CAACxB,KAAR,CAAhB,CAhBF,CAFF,CADD,CAPH,CADF,CADF,CAFF,CADF;AAwCD;AACF,GA3CD,CAvHuB,CAoKvB;;;AACA,QAAMyB,YAAY,GAAG,MAAM;AACzB;AACA,QAAI7B,QAAQ,KAAK,IAAjB,EAAuB;AACrB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEO,OAAO,CAAChD,IAAnC;AAAyC,QAAA,OAAO,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAamE,GAAb,CAAkBI,KAAD,iBAChB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEvB,OAAO,CAAC9C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B8C,IAAI,CAACgC,KAAD,CAA9B,CADF,CAFF,CADF,CADD,CADH,CADF,CADF,CAFF,eAkBE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEvB,OAAO,CAAChD,IAAnC;AAAyC,QAAA,OAAO,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAamE,GAAb,CAAkBI,KAAD,iBAChB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEvB,OAAO,CAAC9C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B8C,IAAI,CAACgC,KAAD,CAA9B,CADF,CAFF,CADF,CADD,CADH,CADF,CADF,CAlBF,eAkCE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEvB,OAAO,CAAChD,IAAnC;AAAyC,QAAA,OAAO,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAemE,GAAf,CAAoBI,KAAD,iBAClB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEvB,OAAO,CAAC9C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B8C,IAAI,CAACgC,KAAD,CAA9B,CADF,CAFF,CADF,CADD,CADH,CADF,CADF,CAlCF,eAkDE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEvB,OAAO,CAAChD,IAAnC;AAAyC,QAAA,OAAO,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiBmE,GAAjB,CAAsBI,KAAD,iBACpB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEvB,OAAO,CAAC9C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B8C,IAAI,CAACgC,KAAD,CAA9B,CADF,CAFF,CADF,CADD,CADH,CADF,CADF,CAlDF,CADF;AAqED;AACF,GAzED;;AA0EA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAI/B,QAAJ,EAAc;AACZ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmBvB,IAAnB,CAFF,CADF;AAMD,KAPD,MAOO;AACL;AACD;AACF,GAXD,CA/OuB,CA4PvB;;;AACA,QAAMuD,SAAS,GAAG,MAAM;AACtB,QAAIhC,QAAQ,KAAK,IAAjB,EAAuB;AACrB,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,SAAS,EAAC,8BADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAJF,eAOE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAU,QAAA,SAAS,EAAC,cAApB;AACE,QAAA,QAAQ,EAAGiC,CAAD,IAAO;AACf5B,UAAAA,QAAQ,CAAC4B,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,SAHH;AAIE,QAAA,IAAI,EAAC,GAJP;AAKE,QAAA,IAAI,EAAC,IALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAPF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,eAoBE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CApBF,CADF,CADF;AA0BD;AACF,GA7BD;;AA+BA,QAAMK,WAAW,GAAG,MAAM;AACxB,wBACE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBH,SAAS,EAA5B,CADF,CADF,CADF;AAOD,GARD;;AAUA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAW9C,IAAX,CADF,CADF,CADF,CADF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CATF,eAuBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAG2C,CAAD,IAAO;AACdd,MAAAA,SAAS,CAACc,CAAD,CAAT;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG/B,OAAO,KAAK,IAAZ,GAAmB,YAAnB,GAAkC,YALrC,CADF,CAPF,CADF,CAvBF,eA2CE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY6B,YAAY,EAAxB,CAPF,CADF,CA3CF,eAuDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAC,cAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,YAAY,EAAxB,CAPF,CADF,CAvDF,eAmEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAC,cAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAnEF,CAFF,eAkFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,cAAc,EAApB,CAlFF,eAmFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMmB,WAAW,EAAjB,CAnFF,CADF;AAuFD,CA7XD;;AA+XA,eAAevF,UAAU,CAACqB,KAAD,CAAzB;AAEA;;;;;;;;;;;;AAYA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useTimer } from \"use-timer\";\r\nimport SpacingGrid from \"./playerlist.jsx\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./lobby.css\";\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: \"1.2rem\",\r\n  \"@media (min-width:600px)\": {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    fontSize: \"2rem\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: 20,\r\n      width: 5,\r\n      padding: theme.spacing(4),\r\n      textAlign: \"center\",\r\n    },\r\n    height: 120,\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst Lobby = (props) => {\r\n  let scores = [];\r\n  let { Time } = queryString.parse(window.location.search);\r\n  //DECLARATIONS OF STATE NECESSARY THINGS\r\n  const { time, start, pause, reset, isRunning } = useTimer({\r\n    initialTime: 15,\r\n    timerType: \"DECREMENTAL\",\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [currentSocket, setCurrentSocket] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [show, setShow] = useState(true);\r\n  const [host, setHost] = useState(\"\");\r\n  const [grid, setGrid] = useState([]);\r\n  const [gridshow, setGShow] = useState(false);\r\n  const [endgame, setEndgame] = useState(false);\r\n  const [words, setWords] = useState(\"\");\r\n  const ENDPOINT = `http://localhost:9000/rooms`;\r\n  const classes = useStyles();\r\n  /////\r\n\r\n  //Use Effect renders\r\n  useEffect(() => {\r\n    let { name, room } = queryString.parse(window.location.search);\r\n    console.log(queryString.parse(window.location.search));\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    const socket = io(`${ENDPOINT}/${room}`);\r\n    setCurrentSocket(socket);\r\n\r\n    socket.emit(\"add_player\", name);\r\n\r\n    socket.on(\"add_to_list\", (players_list) => {\r\n      console.log(players_list);\r\n      setPlayers(players_list);\r\n    });\r\n\r\n    socket.on(\"host\", (host) => {\r\n      console.log(\"getting called\");\r\n      console.log(host);\r\n      setHost(host);\r\n    });\r\n\r\n    socket.on(\"starting_game\", (data) => {\r\n      console.log(data.grid[0]);\r\n      setGrid(data.grid);\r\n      setGShow(data.start);\r\n      console.log(gridshow);\r\n      if (data.start) {\r\n        reset();\r\n        start();\r\n        setCount(0);\r\n      }\r\n    });\r\n\r\n    socket.on(\"sending scores\", (data) => {\r\n      //console.log('I am getting called')\r\n      console.log(data.players);\r\n      if (data.players !== undefined) {\r\n        scores = data.players;\r\n        display_scores();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //console.log('i am getting called')\r\n    if (time === 0 && count === 0) {\r\n      setEndgame(true);\r\n      setGShow(false);\r\n      submit_data();\r\n      setCount(1);\r\n    }\r\n  }, [time]);\r\n\r\n  //STARTS THE GAME\r\n  const StartGame = (msg) => {\r\n    console.log(name);\r\n    console.log(\"I am getting called\");\r\n    currentSocket.emit(\"start game\", name);\r\n  };\r\n  //Submits data when game is over\r\n  const submit_data = () => {\r\n    currentSocket.emit(\"Words\", {\r\n      name: name,\r\n      words: words,\r\n      no_of_players: players.length,\r\n    });\r\n    currentSocket.emit(\"get_scores\", () => {\r\n      console.log(\"I am getting called\");\r\n    });\r\n  };\r\n\r\n  const total_score = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <h6> total score : {score}</h6>{\" \"}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //DISPLAYS SCORES\r\n  const display_scores = () => {\r\n    if (gridshow === false) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                spacing={4}\r\n              >\r\n                {scores.map((player) => (\r\n                  <Grid key={player.name} item>\r\n                    <h3>{player.name}</h3>\r\n                    <Grid\r\n                      container\r\n                      direction=\"column\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"center\"\r\n                      spacing={2}\r\n                    >\r\n                      {player.words.map((word) => (\r\n                        <Grid key={word.word} item>\r\n                          <h6>\r\n                            {word.word !== \"\"\r\n                              ? `${word.word} - ${word.score}`\r\n                              : \"\"}\r\n                          </h6>\r\n                        </Grid>\r\n                      ))}\r\n                      <h6>{total_score(player.words)}</h6>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //RENDER FUNCTIONS\r\n  const display_grid = () => {\r\n    //console.log(grid[0])\r\n    if (gridshow === true) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[0, 1, 2, 3].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[4, 5, 6, 7].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[8, 9, 10, 11].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[12, 13, 14, 15].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const render_timer = () => {\r\n    if (gridshow) {\r\n      return (\r\n        <div>\r\n          <h3>..Find Words!!</h3>\r\n          <h4>Seconds Left: {time}</h4>\r\n        </div>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  //TEXT AREA\r\n  const text_area = () => {\r\n    if (gridshow === true) {\r\n      return (\r\n        <Form >\r\n          <Form.Group\r\n            controlId=\"exampleForm.ControlTextarea1\"\r\n         \r\n          >\r\n            <Form.Label>\r\n              <h4>Enter your Words Here</h4>\r\n            </Form.Label>\r\n            <div className=\"text-container\">\r\n            <textarea className=\"my_text_area\"\r\n              onChange={(e) => {\r\n                setWords(e.target.value);\r\n              }}\r\n              rows=\"4\"\r\n              cols=\"50\"\r\n            >\r\n             \r\n            </textarea>\r\n            </div>\r\n\r\n            <br />\r\n            <Button variant=\"success\">Words Will Automatically Submit</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      );\r\n    }\r\n  };\r\n\r\n  const show_scores = () => {\r\n    return (\r\n      <div id=\"paper\">\r\n        <div id=\"pattern\">\r\n          <div id=\"content\">{text_area()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <div></div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={4}>\r\n            <Grid item>\r\n              <h1>Code: {room}</h1>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <SpacingGrid players={players}></SpacingGrid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                onClick={(e) => {\r\n                  StartGame(e);\r\n                }}\r\n              >\r\n                {endgame === true ? \"play again\" : \"start game\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{render_timer()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{display_grid()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={4} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div>{display_scores()}</div>\r\n      <div>{show_scores()}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lobby);\r\n\r\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\r\n\r\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\r\n"]},"metadata":{},"sourceType":"module"}