{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vivek\\\\Coding_Projects\\\\new_boggle\\\\boggle\\\\client\\\\src\\\\components\\\\lobby.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Figure from \"react-bootstrap/Figure\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTimer } from \"use-timer\";\nimport SpacingGrid from \"./playerlist.jsx\";\nimport { withRouter } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport \"./lobby.css\";\nconst theme = createMuiTheme();\ntheme.typography.h3 = {\n  fontSize: \"1.2rem\",\n  \"@media (min-width:600px)\": {\n    fontSize: \"1.5rem\"\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"2rem\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(5),\n    [theme.breakpoints.down(\"xs\")]: {\n      height: 20,\n      width: 5,\n      padding: theme.spacing(4),\n      textAlign: \"center\"\n    },\n    height: 120,\n    width: 100,\n    textAlign: \"center\"\n  },\n  control: {\n    padding: theme.spacing(4)\n  }\n}));\nlet scores = [];\n\nconst Lobby = props => {\n  //DECLARATIONS OF STATE NECESSARY THINGS\n  const {\n    time,\n    start,\n    pause,\n    reset,\n    isRunning\n  } = useTimer({\n    initialTime: 0\n  });\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [currentSocket, setCurrentSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [score_array, setscore_array] = useState([]);\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(false);\n  const [showscores, setshowscores] = useState(true);\n  const [host, setHost] = useState(\"\");\n  const [grid, setGrid] = useState([]);\n  const [gridshow, setGShow] = useState(false);\n  const [showgrid, setshowgrid] = useState(false);\n  const [endgame, setEndgame] = useState(false);\n  const [words, setWords] = useState(\"\");\n  const [endtime, setendtime] = useState(10);\n  let final_time = 0; //const ENDPOINT = `https://backend-boggle.herokuapp.com/rooms`;\n\n  const ENDPOINT = `http://localhost:9000/rooms`;\n  const classes = useStyles(); //Use Effect renders\n\n  useEffect(() => {\n    let {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    console.log(queryString.parse(window.location.search));\n    setName(name);\n    setRoom(room);\n    const socket = io(`${ENDPOINT}/${room}`);\n    setCurrentSocket(socket);\n    socket.emit(\"add_player\", name);\n    socket.on(\"add_to_list\", players_list => {\n      console.log(players_list);\n      setPlayers(players_list);\n    });\n    socket.on(\"host\", host => {\n      console.log(\"getting called\");\n      console.log(host);\n      setHost(host);\n    });\n    socket.on(\"sending_time\", time => {\n      console.log('getting called');\n      console.log(time);\n      setendtime(time);\n      console.log(endtime);\n    });\n    socket.on(\"starting_game\", data => {\n      console.log(data.grid[0]);\n      setGrid(data.grid);\n      setGShow(data.start);\n      setshowgrid(false);\n      console.log(gridshow);\n\n      if (data.start) {\n        reset();\n        start();\n        setCount(0);\n      }\n    });\n    socket.on(\"sending scores\", data => {\n      //console.log('I am getting called')\n      console.log(data.players);\n\n      if (data.players !== undefined) {\n        console.log(\"data.players not undefined\");\n        scores = data.players;\n        console.log(scores);\n        setshowscores(true);\n      }\n\n      order_scores(scores);\n    });\n\n    window.onpopstate = e => {\n      socket.emit(\"disconnect\", name);\n      socket.off();\n    };\n\n    return () => {\n      socket.emit(\"disconnect\", name);\n      socket.off();\n    };\n  }, []);\n  useEffect(() => {\n    if (time >= endtime && count === 0) {\n      console.log('happening');\n      setEndgame(true);\n      setGShow(false);\n      submit_data();\n      setCount(1);\n    }\n  }, [time]); //STARTS THE GAME\n\n  const StartGame = msg => {\n    console.log(name);\n    console.log(\"I am getting called\");\n    currentSocket.emit(\"start game\", name);\n  }; //Submits data when game is over\n\n\n  const submit_data = () => {\n    currentSocket.emit(\"Words\", {\n      name: name,\n      words: words,\n      no_of_players: players.length\n    });\n    currentSocket.emit(\"get_scores\", () => {\n      console.log(\"I am getting called\");\n    });\n  };\n\n  const order_scores = () => {\n    for (let i = 0; i < scores.length; i++) {\n      score_array.push(total_score1(scores[i].words));\n    }\n\n    score_array.sort(function (a, b) {\n      setShow(true);\n      return b - a;\n    });\n    console.log(score_array);\n  };\n\n  const total_score1 = pwords => {\n    if (pwords !== undefined) {\n      if (pwords.length !== 0) {\n        var score = 0;\n        pwords.map(word => {\n          score += word.score;\n        });\n        return score;\n      }\n    }\n  };\n\n  const total_score = pwords => {\n    if (pwords !== undefined) {\n      if (pwords.length !== 0) {\n        var score = 0;\n        pwords.map(word => {\n          score += word.score;\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }\n        }, \" total score : \", score), \" \", score === score_array[0] ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://img.icons8.com/ios-filled/100/000000/medal2.png\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }\n        })) : \"\", score === score_array[1] && score !== score_array[0] ? /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://img.icons8.com/ios-filled/100/000000/medal-second-place.png\",\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }\n        }) : \"\", score === score_array[2] && score !== score_array[1] ? /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://img.icons8.com/ios-filled/100/000000/medal-third-place.png\",\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }\n        }) : \"\");\n      }\n    }\n  };\n\n  const leaderboard = () => {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, scores.length > 0 ? /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, \"Leaderboard\"), \" \") : \"\"));\n  }; //DISPLAYS SCORES\n\n\n  const display_scores = () => {\n    if (gridshow === false && scores.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-evenly\",\n        alignItems: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }, scores.map(player => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        placement: \"bottom\",\n        overlay: /*#__PURE__*/React.createElement(Popover, {\n          id: \"popover-basic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Popover.Title, {\n          as: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 27\n          }\n        }, \"Word List\"), /*#__PURE__*/React.createElement(Popover.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          spacing: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }\n        }, player.words.map(word => /*#__PURE__*/React.createElement(Grid, {\n          key: word.word,\n          item: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 35\n          }\n        }, word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"))), \"(tap note to show and hide list)\"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 27\n        }\n      }, player.name)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }\n      }, total_score(player.words)))))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        onClick: e => {\n          setshowgrid(!showgrid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 18\n        }\n      }, \"See board\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 12\n        }\n      })));\n    }\n  }; //RENDER FUNCTIONS\n\n\n  const display_grid = () => {\n    //console.log(grid[0])\n    if (gridshow === true || showgrid === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }\n      }, [0, 1, 2, 3].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }\n      }, [4, 5, 6, 7].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }\n      }, [8, 9, 10, 11].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, grid[value])))))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }\n      }, [12, 13, 14, 15].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }\n      }, grid[value])))))))));\n    }\n  };\n\n  const render_timer = () => {\n    if (gridshow) {\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }\n      }, \"Find Words!! Seconds Left: \", endtime - time));\n    } else {\n      return;\n    }\n  };\n\n  const text_area = () => {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"my_text_area\",\n      onChange: e => {\n        setWords(e.target.value);\n      },\n      placeholder: \"enter your words here\",\n      rows: \"100\",\n      cols: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  const show_text = () => {\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"paper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"pattern\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }\n      }, text_area(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 17\n        }\n      }), \"(Words will automatically submit)\"))));\n    }\n  };\n\n  const render_code = () => {\n    if (!gridshow && scores.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 15\n        }\n      }, \" \", `${host}'s room`, \" Code: \", room))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 7\n      }\n    }, \"code:\", room, \" \", leaderboard());\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 11\n    }\n  }, render_code()))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }, display_scores(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SpacingGrid, {\n    players: players,\n    gridshow: gridshow,\n    scores: scores,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }, gridshow === false ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      StartGame(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  }, endgame === true ? \"play again\" : \"start game\")) : \"\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, gridshow === false ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"mr-sm-2\",\n    htmlFor: \"inlineFormCustomSelect\",\n    srOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 25\n    }\n  }, \"Preference\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: e => {\n      final_time = e.target.value;\n      console.log(final_time);\n      currentSocket.emit('setting_time', final_time);\n    },\n    as: \"select\",\n    className: \"mr-sm-2\",\n    id: \"inlineFormCustomSelect\",\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 27\n    }\n  }, \"Set Time...(seconds)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 27\n    }\n  }, \"60\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"120\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 27\n    }\n  }, \"120\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"180\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 27\n    }\n  }, \"180\")))))) : \"\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 13\n    }\n  }, render_timer()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 13\n    }\n  }, display_grid()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 13\n    }\n  }, show_text())))));\n};\n\nexport default withRouter(Lobby);\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\n\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\n//   <Grid\n//   container\n//   direction=\"column\"\n//   justify=\"flex-start\"\n//   alignItems=\"center\"\n//   spacing={2}\n// >\n//   {player.words.map((word) => (\n//     <Grid key={word.word} item>\n//       <h6>\n//         {word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"}\n//       </h6>\n//     </Grid>\n//   ))}\n//   <h6>{total_score(player.words)}</h6>\n// </Grid>","map":{"version":3,"sources":["C:/Users/vivek/Coding_Projects/new_boggle/boggle/client/src/components/lobby.jsx"],"names":["React","useState","useEffect","queryString","io","Button","Form","Col","Figure","makeStyles","Grid","Container","Paper","useTimer","SpacingGrid","withRouter","createMuiTheme","ThemeProvider","Typography","Popover","OverlayTrigger","theme","typography","h3","fontSize","breakpoints","up","useStyles","root","flexGrow","paper","padding","spacing","down","height","width","textAlign","control","scores","Lobby","props","time","start","pause","reset","isRunning","initialTime","name","setName","room","setRoom","currentSocket","setCurrentSocket","players","setPlayers","score_array","setscore_array","count","setCount","show","setShow","showscores","setshowscores","host","setHost","grid","setGrid","gridshow","setGShow","showgrid","setshowgrid","endgame","setEndgame","words","setWords","endtime","setendtime","final_time","ENDPOINT","classes","parse","window","location","search","console","log","socket","emit","on","players_list","data","undefined","order_scores","onpopstate","e","off","submit_data","StartGame","msg","no_of_players","length","i","push","total_score1","sort","a","b","pwords","score","map","word","total_score","leaderboard","display_scores","player","display_grid","value","render_timer","text_area","target","show_text","render_code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useTimer } from \"use-timer\";\r\nimport SpacingGrid from \"./playerlist.jsx\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport \"./lobby.css\";\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: \"1.2rem\",\r\n  \"@media (min-width:600px)\": {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    fontSize: \"2rem\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: 20,\r\n      width: 5,\r\n      padding: theme.spacing(4),\r\n      textAlign: \"center\",\r\n    },\r\n    height: 120,\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nlet scores = [];\r\n\r\nconst Lobby = (props) => {\r\n  //DECLARATIONS OF STATE NECESSARY THINGS\r\n\r\n  const { time, start, pause, reset, isRunning } = useTimer({\r\n    initialTime: 0,\r\n  });\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [currentSocket, setCurrentSocket] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [score_array, setscore_array] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [showscores, setshowscores] = useState(true);\r\n  const [host, setHost] = useState(\"\");\r\n  const [grid, setGrid] = useState([]);\r\n  const [gridshow, setGShow] = useState(false);\r\n  const [showgrid, setshowgrid] = useState(false);\r\n  const [endgame, setEndgame] = useState(false);\r\n  const [words, setWords] = useState(\"\");\r\n  const [endtime, setendtime]  = useState(10);\r\n  let final_time = 0;\r\n  //const ENDPOINT = `https://backend-boggle.herokuapp.com/rooms`;\r\n  const ENDPOINT = `http://localhost:9000/rooms`;\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n\r\n  //Use Effect renders\r\n  useEffect(() => {\r\n    let { name, room } = queryString.parse(window.location.search);\r\n    console.log(queryString.parse(window.location.search));\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    const socket = io(`${ENDPOINT}/${room}`);\r\n    setCurrentSocket(socket);\r\n\r\n    socket.emit(\"add_player\", name);\r\n\r\n    socket.on(\"add_to_list\", (players_list) => {\r\n      console.log(players_list);\r\n      setPlayers(players_list);\r\n    });\r\n\r\n    socket.on(\"host\", (host) => {\r\n      console.log(\"getting called\");\r\n      console.log(host);\r\n      setHost(host);\r\n    });\r\n\r\n    socket.on(\"sending_time\", (time) => {\r\n      console.log('getting called')\r\n      console.log(time);\r\n      setendtime(time);\r\n      console.log(endtime);\r\n    });\r\n\r\n    socket.on(\"starting_game\", (data) => {\r\n      console.log(data.grid[0]);\r\n      setGrid(data.grid);\r\n      setGShow(data.start);\r\n      setshowgrid(false);\r\n      console.log(gridshow);\r\n      if (data.start) {\r\n        reset();\r\n        start();\r\n        setCount(0);\r\n      }\r\n    });\r\n\r\n    socket.on(\"sending scores\", (data) => {\r\n      //console.log('I am getting called')\r\n      console.log(data.players);\r\n      if (data.players !== undefined) {\r\n        console.log(\"data.players not undefined\")\r\n        scores = data.players;\r\n        console.log(scores)\r\n        setshowscores(true);\r\n      }\r\n      order_scores(scores);\r\n    });\r\n\r\n    window.onpopstate = e => {\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    }\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (time >= endtime && count === 0) {\r\n     console.log('happening')\r\n      setEndgame(true);\r\n      setGShow(false);\r\n      submit_data();\r\n      setCount(1);\r\n    }\r\n  }, [time]);\r\n\r\n  //STARTS THE GAME\r\n  const StartGame = (msg) => {\r\n    console.log(name);\r\n    console.log(\"I am getting called\");\r\n    currentSocket.emit(\"start game\", name);\r\n  };\r\n  //Submits data when game is over\r\n  const submit_data = () => {\r\n    currentSocket.emit(\"Words\", {\r\n      name: name,\r\n      words: words,\r\n      no_of_players: players.length,\r\n    });\r\n    currentSocket.emit(\"get_scores\", () => {\r\n      console.log(\"I am getting called\");\r\n    });\r\n  };\r\n\r\n  const order_scores = () => {\r\n    for (let i = 0; i < scores.length; i++) {\r\n      score_array.push(total_score1(scores[i].words));\r\n    }\r\n    score_array.sort(function (a, b) {\r\n      setShow(true)\r\n      return b - a;\r\n    });\r\n    console.log(score_array);\r\n  };\r\n\r\n  const total_score1 = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        return score;\r\n      }\r\n    }\r\n  }\r\n\r\n  const total_score = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <h6> total score : {score}</h6>{\" \"}\r\n            {score === score_array[0] ? (\r\n              <div>\r\n                <img src=\"https://img.icons8.com/ios-filled/100/000000/medal2.png\" />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {score === score_array[1] && score !== score_array[0] ? (\r\n              <img\r\n                src=\"https://img.icons8.com/ios-filled/100/000000/medal-second-place.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {score === score_array[2] && score !== score_array[1] ? (\r\n              <img\r\n                src=\"https://img.icons8.com/ios-filled/100/000000/medal-third-place.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const leaderboard = () => {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"h3\">\r\n          {scores.length > 0 ? (\r\n            <strong>\r\n              <h3>Leaderboard</h3>{\" \"}\r\n            </strong>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Typography>\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n\r\n  //DISPLAYS SCORES\r\n  const display_scores = () => {\r\n    if (gridshow === false && scores.length > 0) {\r\n      return (\r\n        <div>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <br/>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={4}\r\n              >\r\n                {scores.map((player) => (\r\n                  <li>\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      \r\n                      placement=\"bottom\"\r\n                      overlay={\r\n                        <Popover id=\"popover-basic\">\r\n                          <Popover.Title as=\"h3\">Word List</Popover.Title>\r\n                          <Popover.Content>\r\n                            <Grid\r\n                              container\r\n                              direction=\"column\"\r\n                              justify=\"center\"\r\n                              alignItems=\"center\"\r\n                              spacing={0}\r\n                            >\r\n                              {player.words.map((word) => (\r\n                                <Grid key={word.word} item>\r\n                                  <h6>\r\n                                    {word.word !== \"\"\r\n                                      ? `${word.word} - ${word.score}`\r\n                                      : \"\"}\r\n                                  </h6>\r\n                                </Grid>\r\n                              ))}\r\n                              (tap note to show and hide list)\r\n                            </Grid>\r\n                          </Popover.Content>\r\n                        </Popover>\r\n                      }\r\n                    >\r\n                      <a>\r\n                        <ThemeProvider theme={theme}>\r\n                          <Typography variant=\"h3\">{player.name}</Typography>\r\n                        </ThemeProvider>\r\n                        <h3>{total_score(player.words)}</h3>\r\n                      </a>\r\n                    </OverlayTrigger>\r\n                  </li>\r\n                ))}\r\n                 <Button variant='success' onClick={(e)=>{setshowgrid(!showgrid)}}>See board</Button>\r\n              </Grid>\r\n            </Grid>\r\n           <br/>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //RENDER FUNCTIONS\r\n  const display_grid = () => {\r\n    //console.log(grid[0])\r\n    if (gridshow === true || showgrid === true) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[0, 1, 2, 3].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[4, 5, 6, 7].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[8, 9, 10, 11].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[12, 13, 14, 15].map((value) => (\r\n                  <Grid key={value} item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h3\">{grid[value]}</Typography>\r\n                      </ThemeProvider>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const render_timer = () => {\r\n    if (gridshow) {\r\n      return (\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h3\">\r\n            Find Words!! Seconds Left: {endtime - time}\r\n          </Typography>\r\n        </ThemeProvider>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const text_area = () => {\r\n    return (\r\n      <Form>\r\n        <Form.Group>\r\n          <div className=\"text-container\">\r\n            <textarea\r\n              className=\"my_text_area\"\r\n              onChange={(e) => {\r\n                setWords(e.target.value);\r\n              }}\r\n              placeholder=\"enter your words here\"\r\n              rows=\"100\"\r\n              cols=\"20\"\r\n            ></textarea>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  const show_text = () => {\r\n    if (gridshow === true) {\r\n      return (\r\n        <div>\r\n          <div id=\"paper\">\r\n            <div id=\"pattern\">\r\n              <div id=\"content\">\r\n                {text_area()}\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                (Words will automatically submit)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const render_code = () => {\r\n    if (!gridshow && scores.length === 0) {\r\n      return (\r\n        <div>\r\n          <ThemeProvider theme={theme}>\r\n            <Typography variant=\"h3\">\r\n              <strong>\r\n                {\" \"}\r\n                {`${host}'s room`} Code: {room}\r\n              </strong>\r\n            </Typography>\r\n          </ThemeProvider>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        code:{room} {leaderboard()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Container fixed>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={4}>\r\n          <Grid item>{render_code()}</Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid>\r\n        {display_scores()}\r\n        <br />\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <SpacingGrid\r\n                players={players}\r\n                gridshow={gridshow}\r\n                scores={scores}\r\n              ></SpacingGrid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              {gridshow === false ? (\r\n                <div>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      StartGame(e);\r\n                    }}\r\n                  >\r\n                    {endgame === true ? \"play again\" : \"start game\"}\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              {gridshow === false ? (\r\n                <div>\r\n                  <Form>\r\n                    <Form.Row className=\"align-items-center\">\r\n                      <Col xs=\"auto\" className=\"my-1\">\r\n                        <Form.Label\r\n                          className=\"mr-sm-2\"\r\n                          htmlFor=\"inlineFormCustomSelect\"\r\n                          srOnly\r\n                        >\r\n                          Preference\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                       onChange= {(e) => {\r\n                      final_time = e.target.value\r\n                        console.log(final_time)\r\n    currentSocket.emit('setting_time', (final_time))\r\n                      }}\r\n                          as=\"select\"\r\n                          className=\"mr-sm-2\"\r\n                          id=\"inlineFormCustomSelect\"\r\n                          custom\r\n                        >\r\n                          <option value=\"10\">Set Time...(seconds)</option>\r\n                          <option value=\"60\">60</option>\r\n                          <option value=\"120\">120</option>\r\n                          <option value=\"180\">180</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{render_timer()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{display_grid()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm={4} xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{show_text()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lobby);\r\n\r\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\r\n\r\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\r\n\r\n//   <Grid\r\n//   container\r\n//   direction=\"column\"\r\n//   justify=\"flex-start\"\r\n//   alignItems=\"center\"\r\n//   spacing={2}\r\n// >\r\n//   {player.words.map((word) => (\r\n//     <Grid key={word.word} item>\r\n//       <h6>\r\n//         {word.word !== \"\" ? `${word.word} - ${word.score}` : \"\"}\r\n//       </h6>\r\n//     </Grid>\r\n//   ))}\r\n//   <h6>{total_score(player.words)}</h6>\r\n// </Grid>\r\n"]},"metadata":{},"sourceType":"module"}