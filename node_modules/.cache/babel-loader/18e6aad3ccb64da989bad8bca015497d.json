{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vivek\\\\Coding_Projects\\\\new_boggle\\\\boggle\\\\client\\\\src\\\\components\\\\lobby.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTimer } from \"use-timer\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport SpacingGrid from \"./playerlist.jsx\";\nimport { withRouter } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(5),\n    height: 120,\n    width: 100,\n    textAlign: \"center\"\n  },\n  control: {\n    padding: theme.spacing(4)\n  }\n}));\nlet scores = [];\nlet p1words = [];\nlet p2words = [];\nlet p3words = [];\nlet p4words = [];\nlet p5words = [];\nlet p6words = [];\n\nconst Lobby = props => {\n  //DECLARATIONS OF STATE NECESSARY THINGS\n  const {\n    time,\n    start,\n    pause,\n    reset,\n    isRunning\n  } = useTimer({\n    initialTime: 45,\n    timerType: \"DECREMENTAL\"\n  });\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [currentSocket, setCurrentSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(true);\n  const [host, setHost] = useState(\"\");\n  const [grid, setGrid] = useState([]);\n  const [gridshow, setGShow] = useState(false);\n  const [endgame, setEndgame] = useState(false);\n  const [words, setWords] = useState(\"\");\n  const ENDPOINT = `http://localhost:9000/rooms`;\n  const classes = useStyles(); /////\n  //Use Effect renders\n\n  useEffect(() => {\n    let {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    setName(name);\n    setRoom(room);\n    const socket = io(`${ENDPOINT}/${room}`);\n    setCurrentSocket(socket);\n    socket.emit(\"add_player\", name);\n    socket.on(\"add_to_list\", players_list => {\n      console.log(players_list);\n      setPlayers(players_list);\n    });\n    socket.on(\"host\", host => {\n      console.log(host);\n      setHost(host);\n    });\n    socket.on(\"starting_game\", data => {\n      console.log(data.grid[0]);\n      setGrid(data.grid);\n      setGShow(data.start);\n      console.log(gridshow);\n\n      if (data.start) {\n        start();\n      }\n    });\n    socket.on(\"sending scores\", data => {\n      //console.log('I am getting called')\n      console.log(data.players);\n      scores = data.players;\n      create_word_banks(data.players);\n      display_scores();\n    });\n    return () => {\n      socket.emit(\"disconnect\", name);\n      socket.off();\n    };\n  }, []);\n\n  const create_word_banks = scores => {\n    if (scores[0].words != undefined) {\n      p1words = scores[0].words;\n      console.log(p1words);\n    }\n\n    try {\n      if (scores[1].words != undefined) {\n        p2words = scores[1].words;\n      }\n    } catch {\n      p2words = undefined;\n    }\n\n    try {\n      if (scores[2].words != undefined) {\n        p3words = scores[2].words;\n      }\n    } catch {\n      p3words = undefined;\n    }\n\n    try {\n      if (scores[3].words != undefined) {\n        p4words = scores[3].words;\n      }\n    } catch {\n      p4words = undefined;\n    }\n\n    try {\n      if (scores[4].words != undefined) {\n        p5words = scores[4].words;\n      }\n    } catch {\n      p5words = undefined;\n    }\n\n    try {\n      if (scores[5].words != undefined) {\n        p6words = scores[5].words;\n      }\n    } catch {\n      p6words = undefined;\n    }\n  };\n\n  useEffect(() => {\n    //console.log('i am getting called')\n    if (time === 0 && count === 0) {\n      setEndgame(true);\n      setGShow(false);\n      submit_data();\n      setCount(1);\n    }\n  }, [time]); //STARTS THE GAME\n\n  const StartGame = msg => {\n    console.log(name);\n    console.log(\"I am getting called\");\n    currentSocket.emit(\"start game\", name);\n  }; //Submits data when game is over\n\n\n  const submit_data = () => {\n    currentSocket.emit(\"Words\", {\n      name: name,\n      words: words,\n      no_of_players: players.length\n    });\n    currentSocket.emit(\"get_scores\", () => {\n      console.log(\"I am getting called\");\n    });\n  };\n\n  const total_score = pwords => {\n    if (pwords !== undefined) {\n      if (pwords.length !== 0) {\n        var score = 0;\n        pwords.map(word => {\n          score += word.score;\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }\n        }, \" total score : \", score), \" \");\n      }\n    }\n  }; //DISPLAYS SCORES\n\n\n  const display_scores = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.root,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-around\",\n      alignItems: \"center\",\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, scores.map(player => /*#__PURE__*/React.createElement(Grid, {\n      key: player.name,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, player.name)))))));\n  };\n\n  const display_words = () => {\n    if (gridshow == false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12 / players.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }, p1words.map(word => /*#__PURE__*/React.createElement(Grid, {\n        key: word.word,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, word.word !== \"\" ? word.word : \"\", \" score =\", \" \", word.word !== \"\" ? word.score : \"\"))), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, total_score(p1words)))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12 / players.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, p2words !== undefined ? p2words.map(word => /*#__PURE__*/React.createElement(Grid, {\n        key: word.word,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, word.word !== \"\" ? word.word : \"\", \" score =\", \" \", word.word !== \"\" ? word.score : \"\"))) : \"\", /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }, total_score(p2words)))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12 / players.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, p3words !== undefined ? p3words.map(word => /*#__PURE__*/React.createElement(Grid, {\n        key: word.word,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }\n      }, word.word !== \"\" ? word.word : \"\", \" score =\", \" \", word.word !== \"\" ? word.score : \"\"))) : \"\", /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }\n      }, \" \", total_score(p3words))))));\n    }\n  }; //RENDER FUNCTIONS\n\n\n  const display_grid = () => {\n    //console.log(grid[0])\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, [0, 1, 2, 3].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 23\n        }\n      }, grid[value]), \" \")))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }\n      }, [4, 5, 6, 7].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 23\n        }\n      }, grid[value]), \" \")))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }, [8, 9, 10, 11].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 23\n        }\n      }, grid[value]), \" \")))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.root,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }\n      }, [12, 13, 14, 15].map(value => /*#__PURE__*/React.createElement(Grid, {\n        key: value,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }\n      }, grid[value]), \" \")))))));\n    }\n  };\n\n  const render_timer = () => {\n    if (gridshow) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }\n      }, \"..Find Words!!\"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }, \"Seconds Left: \", time));\n    } else {\n      return;\n    }\n  }; //MODAL\n\n\n  const handleClose = () => {\n    setShow(false);\n  }; //MODAL\n\n\n  function Example() {\n    if (host != \"\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n        show: show,\n        onHide: handleClose,\n        animation: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }, \"Join \", host, \"'s Room\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 19\n        }\n      }, \"yes\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 19\n        }\n      }, \"no\")))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }\n      }, \"Submit\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n  } //TEXT AREA\n\n\n  const text_area = () => {\n    if (gridshow === true) {\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }\n      }, \"Enter your Words Here\")), /*#__PURE__*/React.createElement(Form.Control, {\n        onChange: e => {\n          setWords(e.target.value);\n        },\n        placeholder: \"press enter after every word\",\n        as: \"textarea\",\n        rows: \"16\",\n        collumns: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }\n      }, \"Words Will Automatically Submit\")));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Example, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, \"Code: \", room)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SpacingGrid, {\n    players: players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      StartGame(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, \"start game\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }, render_timer()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }\n  }, display_grid()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, text_area())))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }\n  }, display_scores()), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }\n  }, display_words()));\n};\n\nexport default withRouter(Lobby);\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\n\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/","map":{"version":3,"sources":["C:/Users/vivek/Coding_Projects/new_boggle/boggle/client/src/components/lobby.jsx"],"names":["React","useState","useEffect","queryString","io","Modal","Button","Form","makeStyles","Grid","Container","Paper","useTimer","ListGroup","SpacingGrid","withRouter","useStyles","theme","root","flexGrow","paper","padding","spacing","height","width","textAlign","control","scores","p1words","p2words","p3words","p4words","p5words","p6words","Lobby","props","time","start","pause","reset","isRunning","initialTime","timerType","name","setName","room","setRoom","currentSocket","setCurrentSocket","players","setPlayers","count","setCount","show","setShow","host","setHost","grid","setGrid","gridshow","setGShow","endgame","setEndgame","words","setWords","ENDPOINT","classes","parse","window","location","search","socket","emit","on","players_list","console","log","data","create_word_banks","display_scores","off","undefined","submit_data","StartGame","msg","no_of_players","length","total_score","pwords","score","map","word","player","display_words","display_grid","value","render_timer","handleClose","Example","text_area","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useTimer } from \"use-timer\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport SpacingGrid from \"./playerlist.jsx\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    height: 120,\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nlet scores = [];\r\nlet p1words = [];\r\nlet p2words = [];\r\nlet p3words = [];\r\nlet p4words = [];\r\nlet p5words = [];\r\nlet p6words = [];\r\n\r\nconst Lobby = (props) => {\r\n  //DECLARATIONS OF STATE NECESSARY THINGS\r\n  const { time, start, pause, reset, isRunning } = useTimer({\r\n    initialTime: 45,\r\n    timerType: \"DECREMENTAL\",\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [currentSocket, setCurrentSocket] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [show, setShow] = useState(true);\r\n  const [host, setHost] = useState(\"\");\r\n  const [grid, setGrid] = useState([]);\r\n  const [gridshow, setGShow] = useState(false);\r\n  const [endgame, setEndgame] = useState(false);\r\n  const [words, setWords] = useState(\"\");\r\n  const ENDPOINT = `http://localhost:9000/rooms`;\r\n  const classes = useStyles();\r\n  /////\r\n\r\n  //Use Effect renders\r\n  useEffect(() => {\r\n    let { name, room } = queryString.parse(window.location.search);\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    const socket = io(`${ENDPOINT}/${room}`);\r\n    setCurrentSocket(socket);\r\n\r\n    socket.emit(\"add_player\", name);\r\n\r\n    socket.on(\"add_to_list\", (players_list) => {\r\n      console.log(players_list);\r\n      setPlayers(players_list);\r\n    });\r\n\r\n    socket.on(\"host\", (host) => {\r\n      console.log(host);\r\n      setHost(host);\r\n    });\r\n\r\n    socket.on(\"starting_game\", (data) => {\r\n      console.log(data.grid[0]);\r\n      setGrid(data.grid);\r\n      setGShow(data.start);\r\n      console.log(gridshow);\r\n      if (data.start) {\r\n        start();\r\n      }\r\n    });\r\n\r\n    socket.on(\"sending scores\", (data) => {\r\n      //console.log('I am getting called')\r\n      console.log(data.players);\r\n      scores = data.players;\r\n      create_word_banks(data.players);\r\n      display_scores();\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\", name);\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  const create_word_banks = (scores) => {\r\n    if (scores[0].words != undefined) {\r\n      p1words = scores[0].words;\r\n      console.log(p1words);\r\n    }\r\n    try {\r\n      if (scores[1].words != undefined) {\r\n        p2words = scores[1].words;\r\n      }\r\n    } catch {\r\n      p2words = undefined;\r\n    }\r\n    try {\r\n      if (scores[2].words != undefined) {\r\n        p3words = scores[2].words;\r\n      }\r\n    } catch {\r\n      p3words = undefined;\r\n    }\r\n    try {\r\n      if (scores[3].words != undefined) {\r\n        p4words = scores[3].words;\r\n      }\r\n    } catch {\r\n      p4words = undefined;\r\n    }\r\n    try {\r\n      if (scores[4].words != undefined) {\r\n        p5words = scores[4].words;\r\n      }\r\n    } catch {\r\n      p5words = undefined;\r\n    }\r\n    try {\r\n      if (scores[5].words != undefined) {\r\n        p6words = scores[5].words;\r\n      }\r\n    } catch {\r\n      p6words = undefined;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log('i am getting called')\r\n    if (time === 0 && count === 0) {\r\n      setEndgame(true);\r\n      setGShow(false);\r\n      submit_data();\r\n      setCount(1);\r\n    }\r\n  }, [time]);\r\n\r\n  //STARTS THE GAME\r\n  const StartGame = (msg) => {\r\n    console.log(name);\r\n    console.log(\"I am getting called\");\r\n    currentSocket.emit(\"start game\", name);\r\n  };\r\n  //Submits data when game is over\r\n  const submit_data = () => {\r\n    currentSocket.emit(\"Words\", {\r\n      name: name,\r\n      words: words,\r\n      no_of_players: players.length,\r\n    });\r\n    currentSocket.emit(\"get_scores\", () => {\r\n      console.log(\"I am getting called\");\r\n    });\r\n  };\r\n\r\n  const total_score = (pwords) => {\r\n    if (pwords !== undefined) {\r\n      if (pwords.length !== 0) {\r\n        var score = 0;\r\n        pwords.map((word) => {\r\n          score += word.score;\r\n        });\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <h6> total score : {score}</h6>{\" \"}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //DISPLAYS SCORES\r\n  const display_scores = () => {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Grid container className={classes.root} spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-around\"\r\n              alignItems=\"center\"\r\n              spacing={4}\r\n            >\r\n              {scores.map((player) => (\r\n                <Grid key={player.name} item>\r\n                  <h3>{player.name}</h3>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const display_words = () => {\r\n    if (gridshow == false) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12 / players.length}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n              >\r\n                {p1words.map((word) => (\r\n                  <Grid key={word.word} item>\r\n                    <h6>\r\n                      {word.word !== \"\" ? word.word : \"\"} score ={\" \"}\r\n                      {word.word !== \"\" ? word.score : \"\"}\r\n                    </h6>\r\n                  </Grid>\r\n                ))}\r\n                <h6>{total_score(p1words)}</h6>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12 / players.length}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n              >\r\n                {p2words !== undefined\r\n                  ? p2words.map((word) => (\r\n                      <Grid key={word.word} item>\r\n                        <h6>\r\n                          {word.word !== \"\" ? word.word : \"\"} score ={\" \"}\r\n                          {word.word !== \"\" ? word.score : \"\"}\r\n                        </h6>\r\n                      </Grid>\r\n                    ))\r\n                  : \"\"}\r\n                <h6>{total_score(p2words)}</h6>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12 / players.length}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n              >\r\n                {p3words !== undefined\r\n                  ? p3words.map((word) => (\r\n                      <Grid key={word.word} item>\r\n                        <h6>\r\n                          {word.word !== \"\" ? word.word : \"\"} score ={\" \"}\r\n                          {word.word !== \"\" ? word.score : \"\"}\r\n                        </h6>\r\n                      </Grid>\r\n                    ))\r\n                  : \"\"}\r\n                <h6> {total_score(p3words)}</h6>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //RENDER FUNCTIONS\r\n  const display_grid = () => {\r\n    //console.log(grid[0])\r\n    if (gridshow === true) {\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[0, 1, 2, 3].map((value) => (\r\n                  <Grid key={value} item>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <h3>{grid[value]}</h3>{\" \"}\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[4, 5, 6, 7].map((value) => (\r\n                  <Grid key={value} item>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <h3>{grid[value]}</h3>{\" \"}\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[8, 9, 10, 11].map((value) => (\r\n                  <Grid key={value} item>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <h3>{grid[value]}</h3>{\" \"}\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={4}>\r\n                {[12, 13, 14, 15].map((value) => (\r\n                  <Grid key={value} item>\r\n                    <Paper className={classes.paper}>\r\n                      {\" \"}\r\n                      <h3>{grid[value]}</h3>{\" \"}\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const render_timer = () => {\r\n    if (gridshow) {\r\n      return (\r\n        <div>\r\n          <h3>..Find Words!!</h3>\r\n          <h4>Seconds Left: {time}</h4>\r\n        </div>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  //MODAL\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  //MODAL\r\n  function Example() {\r\n    if (host != \"\") {\r\n      return (\r\n        <>\r\n          <Modal show={show} onHide={handleClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Join {host}'s Room</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Control as=\"select\">\r\n                  <option>yes</option>\r\n                  <option>no</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={handleClose}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    } else {\r\n      return <div>Loading...</div>;\r\n    }\r\n  }\r\n  //TEXT AREA\r\n  const text_area = () => {\r\n    if (gridshow === true) {\r\n      return (\r\n        <Form>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>\r\n              <h4>Enter your Words Here</h4>\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => {\r\n                setWords(e.target.value);\r\n              }}\r\n              placeholder=\"press enter after every word\"\r\n              as=\"textarea\"\r\n              rows=\"16\"\r\n              collumns=\"100\"\r\n            />\r\n            <br />\r\n            <Button variant=\"success\">Words Will Automatically Submit</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <div>\r\n        <Example />\r\n      </div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={4}>\r\n            <Grid item>\r\n              <h1>Code: {room}</h1>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <SpacingGrid players={players}></SpacingGrid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                onClick={(e) => {\r\n                  StartGame(e);\r\n                }}\r\n              >\r\n                start game\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{render_timer()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={8}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{display_grid()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={0}\r\n          >\r\n            <Grid item>{text_area()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div>{display_scores()}</div>\r\n      <div>{display_words()}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lobby);\r\n\r\n/*<div>\r\n<div>\r\n    <h1>Code: {room}</h1>\r\n</div>\r\n<div>\r\n{players.map(function(d, idx){\r\n return (<li key={idx}>{d.name}</li>)\r\n})}\r\n</div>\r\n{display_grid()}\r\n</div>*/\r\n\r\n/*\r\n<div>\r\n            <div><Example /></div>\r\n\r\n            <div>\r\n                <h1>Code: {room}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                {render_players()}\r\n            </div>\r\n\r\n            <div>\r\n                <Button onClick={(e) => {\r\n                    StartGame(e)\r\n                }}>start game</Button>\r\n                {display_grid()}\r\n            </div>\r\n\r\n            <div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n            {render_timer()}\r\n        </div>\r\n\r\n        </div>*/\r\n"]},"metadata":{},"sourceType":"module"}